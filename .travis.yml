language: cpp

matrix:
  fast_finish: true
  include:
    - name: "ubuntu 18.04"
      os: linux
      services:
        - docker
      env:
        - BUILD_TARGET=ubuntu_18.04
    - name: "osx"
      os: osx
      addons:
        homebrew:
          packages:
            - eigen
      env:
        - BUILD_TARGET=osx
    - name: "windows"
      os: windows
      env:
        - BUILD_TARGET=windows
    - name: "clang-format"
      os: linux
      env:
        - BUILD_TARGET=clang_format

install:
  - if [ ${BUILD_TARGET} = ubuntu_18.04 ]; then
      docker build -t build_ubuntu_18.04 -f docker/Dockerfile_ubuntu_18.04 .;
    fi
  - if [ ${BUILD_TARGET} = windows ]; then
      mkdir -p C:\\Program\ Files\\Eigen;
      curl -L http://bitbucket.org/eigen/eigen/get/3.3.7.tar.bz2 --output C:\\Program\ Files\\Eigen\\eigen-3.3.7.tar.bz2;
      7z x -oC:\\Program\ Files\\Eigen C:\\Program\ Files\\Eigen\\eigen-3.3.7.tar.bz2;
      7z x -oC:\\Program\ Files\\Eigen C:\\Program\ Files\\Eigen\\eigen-3.3.7.tar;
      mkdir C:\\Program\ Files\\Eigen\\eigen-eigen-323c052e1731\\build;
      cd C:\\Program\ Files\\Eigen\\eigen-eigen-323c052e1731\\build;
      cmake ..;
      cmake --build . --target install;
    fi

script:
  - if [ ${BUILD_TARGET} = ubuntu_18.04 ]; then
      docker run --rm -it build_ubuntu_18.04;
    fi
  - if [ ${BUILD_TARGET} = osx ]; then
      mkdir build &&
      cd build &&
      cmake -DBUILD_TESTS=ON .. &&
      make &&
      ./tests/tests;
    fi
  - if [ ${BUILD_TARGET} = windows ]; then
      mkdir ${TRAVIS_BUILD_DIR}\\build &&
      cd ${TRAVIS_BUILD_DIR}\\build &&
      cmake -DBUILD_TESTS=ON .. &&
      cmake --build . &&
      ./tests/Debug/tests.exe;
    fi
  - if [ ${BUILD_TARGET} = clang_format ]; then
      sh fix_style.sh ${TRAVIS_BUILD_DIR}

      if git diff-index --quiet HEAD --; then
        echo "Style check succeeded!";
      else
        git diff;
        echo "ERROR - Style check failed!";
        return 1;
      fi
    fi
